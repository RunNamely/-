package com.summer.controller;

import java.util.Arrays;
import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;

import com.summer.pojo.Product;
import com.summer.service.IProductService;

@RestController
public class ProductController {

	@Autowired
	private IProductService productService;
	//按条件查找页面
	@RequestMapping(value = "/seleProduct", method = RequestMethod.GET)
	public ModelAndView list(Product product) {
		List<Product> findProduct = productService.findProduct(product);
		int findProductsize = findProduct.size();
		ModelAndView mv = new ModelAndView();
		mv.addObject("findProduct",findProduct);
		mv.addObject("findProductsize",findProductsize);
		mv.setViewName("product-list");
		return mv;
	}
	//跳转到添加产品页面
	@RequestMapping(value = "/productadd",method = RequestMethod.GET)
	public ModelAndView productadd() {
		ModelAndView mv = new ModelAndView();
		mv.setViewName("product-add");
		return mv;
	}
	//跳转到产品显示主页面
	@RequestMapping(value = "/productlist",method = RequestMethod.GET)
	public ModelAndView productlist() {
		Product product =new Product();
		List<Product> findProduct = productService.findProduct(product);
		int findProductsize = findProduct.size();
		ModelAndView mv = new ModelAndView();
		mv.addObject("findProduct",findProduct);
		mv.addObject("findProductsize",findProductsize);
		mv.setViewName("product-list");
		return mv;
	}
	//添加产品
	@RequestMapping(value = "/AddProduct", method = RequestMethod.GET)
	public ModelAndView add(Product product) {
		productService.addProduct(product);
		ModelAndView mv = new ModelAndView();
		//查找页面显示数据
		Product productall =new Product();
		List<Product> findProduct = productService.findProduct(productall);
		int findProductsize = findProduct.size();
		//传数据
		mv.addObject("findProduct",findProduct);
		mv.addObject("findProductsize",findProductsize);
		//跳转页面
		mv.setViewName("product-list");
		return mv;
	}
	
	//跳转到更新产品页面
	@GetMapping(value = "/ProductUpdate")
	public ModelAndView productupdate(@RequestParam(value = "id")int id) {
		ModelAndView mv = new ModelAndView();
		mv.addObject("id",id);
		mv.setViewName("product-update");
		return mv;
	}
	
	//更新产品
	@RequestMapping(value = "/UpdateProduct",method = RequestMethod.GET)
	public ModelAndView update(Product product) {
		product.setUpdateTime(new Date());
		productService.updateProduct(product);
		ModelAndView mv = new ModelAndView();
		//查找页面显示数据
		Product productall =new Product();
		List<Product> findProduct = productService.findProduct(productall);
		int findProductsize = findProduct.size();
		//传数据
		mv.addObject("findProduct",findProduct);
		mv.addObject("findProductsize",findProductsize);
		//跳转页面
		mv.setViewName("product-list");
		return mv;
	}
	
	//单个删除
	@GetMapping(value = "/ProductRemove")
	public ModelAndView remove(@RequestParam(value = "id")int id){
		//删除
		productService.removeProduct(id);
		ModelAndView mv = new ModelAndView();
		//查找页面显示数据
		Product product =new Product();
		List<Product> findProduct = productService.findProduct(product);
		int findProductsize = findProduct.size();
		//传数据
		mv.addObject("findProduct",findProduct);
		mv.addObject("findProductsize",findProductsize);
		//跳转页面
		mv.setViewName("product-list");
		return mv;
	}
	
	//批量删除
	@RequestMapping(value = "/deleteProduct",method = RequestMethod.GET)
	public 	ModelAndView deleteProduct(String checkedID) {
		String[] split = checkedID.split(",");
		List<String> list = Arrays.asList(split); 
		productService.deleteProduct(list);
		ModelAndView mv = new ModelAndView();
		Product product = new Product();
		List<Product> findProduct = productService.findProduct(product);
		int findProductsize = findProduct.size();
		mv.addObject("findProduct",findProduct);
		mv.addObject("findProductsize",findProductsize);
		mv.setViewName("product-list");
		return mv;
	}
}
